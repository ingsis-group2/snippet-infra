server {
    listen 80;
    listen [::]:80;

    server_name tista.duckdns.org;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://tista.duckdns.org$request_uri;
    }
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl;

    server_name tista.duckdns.org;

    ssl_certificate /etc/nginx/ssl/live/tista.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/tista.duckdns.org/privkey.pem;

    location / {
        root /usr/share/nginx/dist;
        index index.html;
;         proxy_pass http://printscript-ui:5173/;
;         proxy_set_header X-Forwarded-Proto $scheme;
;         proxy_set_header   Host $host;
;         proxy_set_header   X-Real-IP $remote_addr;
;         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
;         proxy_set_header   X-Forwarded-Host $server_name;
;         proxy_set_header   X-Forwarded-Prefix /api/operations;
    }

    location /tista {
            alias /usr/share/nginx/tista.jpg;
            add_header Content-Type image/jpg;
        }

    location /api/operations/ {
         proxy_pass http://snippet-operations:8081/;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_set_header   Host $host;
         proxy_set_header   X-Real-IP $remote_addr;
         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header   X-Forwarded-Host $server_name;
         proxy_set_header   X-Forwarded-Prefix /api/operations;

         if ($request_method = 'OPTIONS') {
                                  add_header 'Access-Control-Allow-Origin' '*';
                                  add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                                  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                                  add_header 'Access-Control-Max-Age' 1728000;
                                  add_header 'Content-Type' 'text/plain; charset=utf-8';
                                  add_header 'Content-Length' 0;
                                  return 204;
                  }

         add_header 'Access-Control-Allow-Origin' '*' always;
         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
         add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
         add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
}
